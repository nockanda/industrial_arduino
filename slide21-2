//01 05 00 00 FF 00 이데이터를 C#이 publish하면 iot보드가 받을 수 있도록 하시오!
#include <ESP8266WiFi.h>
#include <PubSubClient.h>

const char* ssid = "nockanda"; //공유기 id
const char* password = "11213144"; //공유기 pw
const char* mqtt_server = "broker.mqtt-dashboard.com"; //외국에서 공짜로 제공하는 서버

WiFiClient espClient;
PubSubClient client(espClient);
unsigned long lastMsg = 0;
#define MSG_BUFFER_SIZE  (50)
char msg[MSG_BUFFER_SIZE];
int value = 0;

//인터넷 공유기와 접속하겠다!
void setup_wifi() {

  delay(10);
  // We start by connecting to a WiFi network
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);

  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  randomSeed(micros());

  Serial.println("");
  Serial.println("WiFi connected");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());
}

//iot보드에 수신된 mqtt데이터가 처리되는 부분!
void callback(char* topic, byte* payload, unsigned int length) {
  Serial.print("Message arrived [");
  Serial.print(topic);
  Serial.print("] ");
  String res = "";
  //프린트 용도
  for (int i = 0; i < length; i++) {
    Serial.print(payload[i],HEX);
    Serial.print(",");
  }
  Serial.println();
  //값을 대입하는 loop
  for(int i = 0;i<length-1;i++){
    res += String(payload[i]) + ",";
  }
  res += String(payload[length-1]);


  //C#윈폼쪽으로 echo
  client.publish("nockanda/output", res.c_str());
}

//reconnect함수안에서 구독등록을 한다!
void reconnect() {
  // Loop until we're reconnected
  while (!client.connected()) {
    Serial.print("Attempting MQTT connection...");
    // Create a random client ID
    String clientId = "ESP8266Client-";
    clientId += String(random(0xffff), HEX);
    // Attempt to connect
    if (client.connect(clientId.c_str())) {
      Serial.println("connected");
      // Once connected, publish an announcement...
      //client.publish("outTopic", "hello world");
      // ... and resubscribe
      client.subscribe("nockanda/input");
    } else {
      Serial.print("failed, rc=");
      Serial.print(client.state());
      Serial.println(" try again in 5 seconds");
      // Wait 5 seconds before retrying
      delay(5000);
    }
  }
}

void setup() {
  pinMode(BUILTIN_LED, OUTPUT);     // Initialize the BUILTIN_LED pin as an output
  Serial.begin(9600);
  setup_wifi();
  client.setServer(mqtt_server, 1883); //서버정보
  client.setCallback(callback); //수신부처리
}

void loop() {
  //아래 4줄은 반드시 있어야 하는 부분
  if (!client.connected()) {
    reconnect();
  }
  client.loop();
  /*
  unsigned long now = millis();
  if (now - lastMsg > 2000) {
    lastMsg = now;
    ++value;
    snprintf (msg, MSG_BUFFER_SIZE, "hello world #%ld", value);
    Serial.print("Publish message: ");
    Serial.println(msg);
    client.publish("nockanda/output", msg);
  }
  */
}

