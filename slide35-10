//10.녹색버튼을 누르면 task1이 수행되고 적색버튼을 누르면 task2가 수행된다 노란버튼을 누르면 모든 task가 중단된다! (task1과 task2는 동시에 실행될 수 없다)
//task1은 스탭모터1번 180도 이동 (이동완료후) 스탭모터2 180도 이동 (이동완료후) 스탭모터1 270도 이동 (완료) 스탭모터2 90도 이동 (완료) 스탭모터1 원점이동 (완료) 스탭모터2 원점이동 (완료)이다!
//task2는 스탭모터1이 8000이동하고 동시에 스탭모터2가 1600이동 (완료) 스탭모터2가 6400으로 이동 (완료) 스탭모터1번이 1600으로 이동 (완료) 둘다 0으로 이동
#include <arduino-timer.h>
#include <AccelStepper.h>
#define green_lamp 39
#define red_lamp 38
#define btn_forward 35
#define btn_stop 36
#define btn_backward 37

#define DIR1 6
#define PUL1 7
#define DIR2 8
#define PUL2 9

AccelStepper stepper1 = AccelStepper(1, PUL1, DIR1);
AccelStepper stepper2 = AccelStepper(1, PUL2, DIR2);

int target1 = 0; //스탭모터1의 목표지점
int target2 = 0; //스탭모터2의 목표지점

auto timer = timer_create_default();

bool task1_run = false;
int task1_counter = 0;
bool task2_run = false;
int task2_counter = 0;

bool task(void *) {
  if(task1_run){
    digitalWrite(green_lamp,HIGH);
    digitalWrite(red_lamp,LOW);
    if(task1_counter == 0){
      //스탭1 -> 180
      target1 = 800;
    }else if(task1_counter == 7){
      //스탭2 -> 180
      target2 = 800;
    }else if(task1_counter == 14){
      //스탭1 -> 270
      target1 = 1200;
    }else if(task1_counter == 19){
      //스탭2 -> 90
      target2 = 400;
    }else if(task1_counter == 24){
      //스탭1 -> 0
      target1 = 0;
    }else if(task1_counter == 34){
      //스탭2 -> 0
      target2 = 0;
    }else if(task1_counter == 39){
      task1_counter = -1;
    }
    task1_counter++;
  }else if(task2_run){
    digitalWrite(green_lamp,LOW);
    digitalWrite(red_lamp,HIGH);
    if(task2_counter == 0){
      //스탭1 8000
      //스탭2 1600
      target1 = 8000;
      target2 = 1600;
    }else if(task2_counter == 52){
      target2 = 6400;
    }else if(task2_counter == 84){
      target1 = 1600;
    }else if(task2_counter == 126){
      target1 = 0;
      target2 = 0;
    }else if(task2_counter == 168){
      task2_counter = -1;
    }
    task2_counter++; 
  }else{
    digitalWrite(green_lamp,LOW);
    digitalWrite(red_lamp,LOW);
  }
  return true; 
}

void setup() {
  stepper1.setMaxSpeed(1600);
  stepper1.setSpeed(0); 
  stepper2.setMaxSpeed(1600);
  stepper2.setSpeed(0); 
  pinMode(green_lamp,OUTPUT);
  pinMode(red_lamp,OUTPUT);
  pinMode(btn_forward,INPUT);
  pinMode(btn_stop,INPUT);
  pinMode(btn_backward,INPUT);
  timer.every(100, task);
}

void loop() {
  timer.tick();
  if(stepper1.currentPosition() < target1){
    stepper1.setSpeed(1600);
  }else if(stepper1.currentPosition() > target1){
    stepper1.setSpeed(-1600);
  }else{
    stepper1.setSpeed(0);
  }

  if(stepper2.currentPosition() < target2){
    stepper2.setSpeed(1600);
  }else if(stepper2.currentPosition() > target2){
    stepper2.setSpeed(-1600);
  }else{
    stepper2.setSpeed(0);
  }
   
  stepper1.runSpeed(); 
  stepper2.runSpeed();

  if(digitalRead(btn_forward)==HIGH){
    //35(녹색)
    task1_counter = 0;
    task1_run = true;
  }
  if(digitalRead(btn_stop)==HIGH){
    //36(노랑)
    target1 = 0;
    target2 = 0;
    task1_run = false;
    task2_run = false;
  }
  if(digitalRead(btn_backward)==HIGH){
    //37(적색)
    task2_counter = 0;
    task2_run = true;
  }
}

