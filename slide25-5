#include "nockanda.h"

#define btn1 37 //red
#define btn2 36 //green
#define relay 38

Nockanda_modbus nm(&Serial3);

unsigned long main_t = 0;
bool sw = false;

union{
  byte input[4];
  unsigned long output;
}myunion;

void read_input_register(byte id, byte * data,uint16_t offset,uint16_t len,uint16_t num){
  //Serial.println("read_input_register 완료함");
  if(num == 0x0001){
    float volt = (data[3]*256 + data[4])/10.0;
    Serial.print(volt);
    Serial.print("V, ");
    //5,6,7,8
    myunion.input[3] = data[7];
    myunion.input[2] = data[8];
    myunion.input[1] = data[5];
    myunion.input[0] = data[6];
    Serial.print(myunion.output);
    Serial.print("mA, ");
    //9,10,11,12
    myunion.input[3] = data[11];
    myunion.input[2] = data[12];
    myunion.input[1] = data[9];
    myunion.input[0] = data[10];
    Serial.print(myunion.output/10.0);
    Serial.print("W, ");
    //13,14,15,16
    myunion.input[3] = data[15];
    myunion.input[2] = data[16];
    myunion.input[1] = data[13];
    myunion.input[0] = data[14];
    Serial.print(myunion.output);
    Serial.println("Wh");
  }
}
void setup() {
  Serial.begin(9600);//PC에 결과를 출력하기 위한 통신라인!
  nm.begin(9600);//산업용 아두이노와 모드버스 RTU!
  nm.read_input_register_cb = read_input_register;
  pinMode(btn1,INPUT);
  pinMode(btn2,INPUT);
  pinMode(relay,OUTPUT);
}
void loop() {
  nm.loop(); //녹칸다의 모드버스 기능을 동작시키는 부분
  if(millis() - main_t > 1000){
    main_t = millis();
    nm.nockanda_read_input_register_queue(0x01,0x0000,7,0x0001); //전부다 한방에!
  }

  if(digitalRead(btn1) == HIGH){
    digitalWrite(relay,LOW);
  }
  if(digitalRead(btn2) == HIGH){
    digitalWrite(relay,HIGH);
  }
}


