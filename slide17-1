#include <SoftwareSerial.h>
#include "CRC16.h" //CRC라이브러리
#include "CRC.h" //CRC라이브러리

//MAX3232가 2번 3번핀에 연결되어있다!
SoftwareSerial max3232(2,3);

byte res_buff[50];

void turnon(){
  //1마스터가 슬레이브에게 request한다!
  byte req[] = {1,5,0x00,0x00,0xFF,0x00}; //4번째 바이트가 0xFF면 HIGH, 0x00이면 LOW
  //CRC 2바이트를 계산해야한다!
  uint16_t req_crc = crc16(req, sizeof(req), 0x8005, 0xFFFF, 0, true, true);
 
  //2바이트로 표현된 result값을 1byte씩 쪼개서 2byte로 나눠담는 과정~!
  byte req_crc_high = req_crc/256;
  byte req_crc_low = req_crc%256;

  //순서에 맞게 8바이트를 전송한다!
  max3232.write(req,6);
  max3232.write(req_crc_low);
  max3232.write(req_crc_high);
  //2응답을 보내줄때까지 기다린다!
  //만약 슬레이브가 응답을 하지 않는다면? => 마스터가 불능상태에 이른다
  //불능상태를 해제하기 위해서는 일정시간 응답이 없다면 무한루프를 탈출시켜야한다!
  unsigned long req_t = millis(); //무한루프 진입전의 시간
  bool is_timeout = false;
  while(true){
    if(max3232.available()){
      //산업용 아두이노가 응답했다!
      break; 
    }
    if(millis() - req_t > 500){
      //루프가 시작된 이후로 0.5초가 경과했다!
      //then 타임아웃!
      is_timeout = true;
      break;
    }
  }
  //3응답을 수신해서 출력한다!
  //정상적으로 수신했으면 수신결과를 출력하고 없으면 넘어간다!
  if(!is_timeout){
    max3232.readBytes(res_buff,8);
    Serial.print("응답 데이터 수신=");
    for(int i = 0;i<8;i++){
      Serial.print(res_buff[i],HEX);
      Serial.print(", ");
    }
    Serial.println();
  }else{
    Serial.println("타임아웃");
  }
}
void turnoff(){
  //1마스터가 슬레이브에게 request한다!
  byte req[] = {1,5,0x00,0x00,0x00,0x00}; //4번째 바이트가 0xFF면 HIGH, 0x00이면 LOW
  //CRC 2바이트를 계산해야한다!
  uint16_t req_crc = crc16(req, sizeof(req), 0x8005, 0xFFFF, 0, true, true);
 
  //2바이트로 표현된 result값을 1byte씩 쪼개서 2byte로 나눠담는 과정~!
  byte req_crc_high = req_crc/256;
  byte req_crc_low = req_crc%256;

  //순서에 맞게 8바이트를 전송한다!
  max3232.write(req,6);
  max3232.write(req_crc_low);
  max3232.write(req_crc_high);
  //2응답을 보내줄때까지 기다린다!
  //만약 슬레이브가 응답을 하지 않는다면? => 마스터가 불능상태에 이른다
  //불능상태를 해제하기 위해서는 일정시간 응답이 없다면 무한루프를 탈출시켜야한다!
  unsigned long req_t = millis(); //무한루프 진입전의 시간
  bool is_timeout = false;
  while(true){
    if(max3232.available()){
      //산업용 아두이노가 응답했다!
      break; 
    }
    if(millis() - req_t > 500){
      //루프가 시작된 이후로 0.5초가 경과했다!
      //then 타임아웃!
      is_timeout = true;
      break;
    }
  }
  //3응답을 수신해서 출력한다!
  //정상적으로 수신했으면 수신결과를 출력하고 없으면 넘어간다!
  if(!is_timeout){
    max3232.readBytes(res_buff,8);
    Serial.print("응답 데이터 수신=");
    for(int i = 0;i<8;i++){
      Serial.print(res_buff[i],HEX);
      Serial.print(", ");
    }
    Serial.println();
  }else{
    Serial.println("타임아웃");
  }
}

void setup() {
  Serial.begin(9600);//PC에 결과를 출력하기 위한 통신라인!
  max3232.begin(9600);//산업용 아두이노와 모드버스 RTU!
}

void loop() {
  turnon();
  delay(1000);
  turnoff();
  delay(1000);
}


